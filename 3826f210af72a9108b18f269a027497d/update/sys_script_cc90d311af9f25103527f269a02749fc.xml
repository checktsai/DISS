<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1234_jpas_visit_access_requests</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_1234_jpas_visit_access_requests">active=true^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SetOwningGroup</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    switch (current.getValue('site')) {
        case "alc":
        case "arl_central":
        case "arl_south":
            groupName = 'Visit Requests ALC';
            break;
        case "apg":
        case "arl_northeast":
        case "arl_west":
            groupName = 'Visit Requests APG';
            break;
        case "aro":
            groupName = 'Visit Requests ARO';
            break;
        default:
            groupName = 'Visit Requests SSO';
    }
	current.owning_group_name=groupName;
    var gr = new GlideRecord("sys_user_grmember");
    gr.addQuery("group.name", groupName);
    gr.query();
	var groupUsers=[];
    while (gr.next()) {
		groupUsers.push(gr.user.email.toString());
    }
	current.owning_group_email_list=groupUsers.join(";");

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>chihsheng.tsai</sys_created_by>
        <sys_created_on>2023-06-07 13:53:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>cc90d311af9f25103527f269a02749fc</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>SetOwningGroup</sys_name>
        <sys_overrides/>
        <sys_package display_value="Visit Requests" source="x_1234_diss">3826f210af72a9108b18f269a027497d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Visit Requests">3826f210af72a9108b18f269a027497d</sys_scope>
        <sys_update_name>sys_script_cc90d311af9f25103527f269a02749fc</sys_update_name>
        <sys_updated_by>chihsheng.tsai</sys_updated_by>
        <sys_updated_on>2023-06-07 18:19:19</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=cc90d311af9f25103527f269a02749fc"/>
</record_update>
